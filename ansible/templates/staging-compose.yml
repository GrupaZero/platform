version: '2.1'
services:
  proxy_server:
    image: nginx:1.11-alpine
    container_name: staging_proxy_server
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./volumes/htpasswd:/etc/nginx/htpasswd:ro
      - ./volumes/conf.d:/etc/nginx/conf.d
      - ./volumes/vhost.d:/etc/nginx/vhost.d
      - ./volumes/certs:/etc/nginx/certs:ro
      - /usr/share/nginx/html
    networks:
      - gznet
  web_server:
    image: "{{ DOCKER_APP_IMAGE }}:{{ APP_VERSION | default('latest', true) }}"
    restart: always
    depends_on:
      - proxy_server
      - docker_gen_service
      - redis_server
    environment:
      OVERRIDE_UMASK: "022"
      XDEBUG: "false"
      DEFAULT_HOST: "{{ DOMAIN }}"
      VIRTUAL_HOST: "{{ DOMAIN }},api.{{ DOMAIN }},www.{{ DOMAIN }}"
      LETSENCRYPT_HOST: "{{ DOMAIN }},api.{{ DOMAIN }},www.{{ DOMAIN }}"
      LETSENCRYPT_EMAIL: "{{ LETSENCRYPT_EMAIL }}"
    extra_hosts:
      - "db_server:{{ ansible_default_ipv4.address }}" # we use host postgres server
    volumes:
      - ./env:/var/www/.env # Pass all credentials to laravel
      - ./volumes/uploads/staging:/var/www/uploads # Save uploads outside the container
    networks:
      - gznet
  redis_server:
    image: redis:3-alpine
    restart: always
    volumes:
      - redisdata:/data
    networks:
      - gznet
  letsencrypt_service:
    image: jrcs/letsencrypt-nginx-proxy-companion:latest
    restart: always
    depends_on:
      - proxy_server
      - docker_gen_service
    volumes_from:
      - proxy_server
    volumes:
      - ./volumes/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - gznet
    environment:
      NGINX_DOCKER_GEN_CONTAINER: staging_docker_gen_service
      NGINX_PROXY_CONTAINER: staging_proxy_server
  docker_gen_service:
    image: jwilder/docker-gen:0.7.3
    container_name: staging_docker_gen_service
    restart: always
    depends_on:
      - proxy_server
    volumes_from:
      - proxy_server
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./volumes/htpasswd:/etc/nginx/htpasswd:ro
      - ./volumes/templates:/etc/docker-gen/templates:ro
    networks:
      - gznet
    entrypoint: /usr/local/bin/docker-gen -notify-sighup staging_proxy_server -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
networks:
  gznet:
    driver: "bridge"
    enable_ipv6: false
    ipam:
      driver: default
      config:
      - subnet: 172.20.0.0/24
        gateway: 172.20.0.1
volumes:
  dbdata:
    driver: "local"
  redisdata:
    driver: "local"